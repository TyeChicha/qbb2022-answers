This directory contains several read sets that are the starting point for the
challenge.  The reads were generated by taking a portion of an organism's
reference sequence and inserting a secret message into the genome.
Your challenge is to identify the inserted sequence and decode the message.

You can use the included dna-decode.py script to decode the message.  It uses
the algorithm defined in George M. Church, Yuan Gao, and Sriram Kosuri.
Next-Generation Digital Information Storage in DNA. Science 2012. DOI:
10.1126/science.1226355
(https://www.sciencemag.org/content/early/2012/08/15/science.1226355.full). 

The types of reads in each FASTQ (.fq) file are described in detail below.

frag180.1.fq   Read 1 of Illumina 2x100 reads from 180 +/- 20 bp fragments
frag180.2.fq   Read 2 of Illumina 2x100 reads from 180 +/- 20 bp fragments
jump2k.1.fq    Read 1 of Illumina 2x50  reads from 2000 +/- 200 bp fragments
jump2k.2.fq    Read 2 of Illumina 2x50  reads from 2000 +/- 200 bp fragments


1.1
50k , 150k

1.3 
roughly .005 % of the array should be no coverage but in reality about .007 is no coverage so more than expected is uncovered

1.4
roughly .00002 should be uncovered but .000004 is actualy uncovered so less than expected is uncovered.


2.1
4 contigs
2.2
234467 bp long
2.3
105830
2.4
47860

3.1
Average identity = 99.9955 for both
3.2
105830
3.3
6 insertions 5 in ref 1 in query

4.1
ref: 26789 - 26790
query: 26787 - 27500
4.2
712bp
4.3
sequence in secret.txt file
4.4
samtools faidx asm/contigs.fasta NODE_3_length_41351_cov_20.528098:26787-27500 > secret.txt
python dna-decode.py --decode --input secret.txt 
The decoded message :  Congratulations to the 2021 CMDB @ JHU class!  Keep on looking for little green aliens...
